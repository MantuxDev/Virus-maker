package main;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author mantu
 */

import com.formdev.flatlaf.FlatDarkLaf;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

public class Termini extends javax.swing.JFrame {

    /**
     * Creates new form Boot
     */
    

    
    public Termini() {
        initComponents();
        
        // Icon
        setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/icon.png")));
        
        // Text Area
        TextAreaTermini.setCaretPosition(0); // parte dalla prima riga
        
        // BTN
        btnAccetta.setEnabled(false);
        
        try {
            // Leggi Lingua
            FileReader lingua= new FileReader("src/TXTfiles/lingua.txt");
            char c=(char)lingua.read();
            ComboBoxLingua.setSelectedIndex(Character.getNumericValue(c));
            lingua.close();
        } catch (IOException ex) {
            Logger.getLogger(Termini.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaTermini = new javax.swing.JTextArea();
        CheckBoxTermini = new javax.swing.JCheckBox();
        btnAccetta = new javax.swing.JButton();
        btnEsci = new javax.swing.JButton();
        ComboBoxLingua = new javax.swing.JComboBox<>();
        LabelLingua = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Virus Maker");
        setBackground(new java.awt.Color(0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setLocation(new java.awt.Point(0, 0));
        setName("frameBoot"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(500, 500));

        jPanel3.setBackground(new java.awt.Color(19, 19, 19));

        TextAreaTermini.setEditable(false);
        TextAreaTermini.setBackground(new java.awt.Color(51, 51, 51));
        TextAreaTermini.setColumns(20);
        TextAreaTermini.setForeground(new java.awt.Color(255, 255, 255));
        TextAreaTermini.setLineWrap(true);
        TextAreaTermini.setRows(1);
        TextAreaTermini.setText("⚠️ Termini e Condizioni d'Uso\n\nUltimo aggiornamento: 14/05/2025\n\nIMPORTANTE – LEGGERE ATTENTAMENTE PRIMA DI UTILIZZARE QUESTO SOFTWARE. \nQuesto software è fornito \"così com'è\" e l'utilizzo è subordinato all'accettazione completa e incondizionata dei seguenti termini. Qualora non si accettino, anche solo in parte, i presenti termini, l’utente è tenuto a disinstallare immediatamente il software e cessare ogni utilizzo.\n\n\n\n1. Definizioni\n\n- Software: indica il programma eseguibile, i file associati, la documentazione, le librerie e ogni altro elemento fornito dal pacchetto.\n- Autore: l'individuo o gruppo che ha sviluppato il software.\n- Utente: la persona fisica o giuridica che utilizza il software.\n\n\n\n2. Uso Consentito\n\n- L’utente è autorizzato a eseguire il software esclusivamente su macchine di propria proprietà o su cui ha pieno diritto d’uso.\n- L’uso del software è limitato a scopi tecnici, di testing, ricerca in ambienti controllati o sicurezza informatica.\n- È vietato l’utilizzo su sistemi terzi senza esplicito consenso scritto.\n\n\n\n3. Rischi e Limitazioni\n\n- Il software può comportare alterazioni di sistema, modifiche al registro, manipolazioni di file, esecuzione automatica di comandi o processi.\n- Può generare codice con effetti potenzialmente distruttivi, come cancellazione di file, sovrascrittura di dati, blocco di risorse di sistema.\n- È fortemente sconsigliato l’utilizzo da parte di utenti inesperti o senza conoscenze approfondite in ambito informatico o di sicurezza.\n\n\n\n4. Clausola di Non Responsabilità\n\n- L’autore non è in alcun modo responsabile per danni diretti o indiretti derivanti da:\n  - Malfunzionamento del software.\n  - Uso improprio, illegale o contrario ai termini.\n  - Perdita di dati, crash di sistema o altri malfunzionamenti hardware/software.\n  - Impatti economici, legali o reputazionali causati dall’uso del programma.\n\n\n\n5. Conformità Legale\n\n- L’utente si impegna a rispettare tutte le normative locali, nazionali e internazionali in materia di informatica, sicurezza, privacy e uso di software potenzialmente dannoso.\n- In molti Paesi, l’uso o la distribuzione di codice malevolo è considerata un reato perseguibile penalmente.\n- Qualsiasi attività illecita realizzata con questo software è interamente sotto la responsabilità dell’utente.\n\n\n\n6. Licenza d'Uso\n\n- L’utente non acquisisce alcun diritto di proprietà sul software.\n- È vietata la distribuzione, vendita, ingegneria inversa, decompilazione o modifica del software salvo diversa autorizzazione scritta.\n\n\n\n7. Privacy e Telemetria\n\n- Questo software non raccoglie dati personali dell’utente né invia informazioni a terze parti. Tuttavia, l’utente accetta che l’autore non possa garantire l'assenza di vulnerabilità o comportamenti imprevisti.\n\n\n\n8. Aggiornamenti e Manutenzione\n\n- Il software non prevede aggiornamenti automatici.\n- L’autore non garantisce assistenza tecnica né correzione di bug.\n\n\n\n9. Clausola di Risoluzione\n\n- La violazione di anche uno solo dei presenti termini comporterà l’immediata revoca del diritto d’uso.\n- L’autore si riserva il diritto di revocare l’accesso in qualsiasi momento e senza preavviso.\n\n\n\n10. Accettazione\n\n- Utilizzando o installando il software, l’utente dichiara di aver letto, compreso e accettato tutti i termini sopra indicati.");
        TextAreaTermini.setWrapStyleWord(true);
        TextAreaTermini.setFocusable(false);
        jScrollPane1.setViewportView(TextAreaTermini);

        CheckBoxTermini.setBackground(new java.awt.Color(19, 19, 19));
        CheckBoxTermini.setForeground(new java.awt.Color(255, 255, 255));
        CheckBoxTermini.setText("Spuntando questa casella, confermi di aver letto i Termini e le Condizioni");
        CheckBoxTermini.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBoxTerminiActionPerformed(evt);
            }
        });

        btnAccetta.setBackground(new java.awt.Color(51, 51, 51));
        btnAccetta.setForeground(new java.awt.Color(255, 255, 255));
        btnAccetta.setText("Accetta");
        btnAccetta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccettaActionPerformed(evt);
            }
        });

        btnEsci.setBackground(new java.awt.Color(51, 51, 51));
        btnEsci.setForeground(new java.awt.Color(255, 255, 255));
        btnEsci.setText("Esci");
        btnEsci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEsciActionPerformed(evt);
            }
        });

        ComboBoxLingua.setBackground(new java.awt.Color(51, 51, 51));
        ComboBoxLingua.setForeground(new java.awt.Color(255, 255, 255));
        ComboBoxLingua.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Italiano", "English" }));
        ComboBoxLingua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxLinguaActionPerformed(evt);
            }
        });

        LabelLingua.setForeground(new java.awt.Color(255, 255, 255));
        LabelLingua.setText("Seleziona lingua:");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Tavola disegno 1 copia 3.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ComboBoxLingua, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(CheckBoxTermini)
                                .addGap(18, 18, 18)
                                .addComponent(btnEsci)
                                .addGap(18, 18, 18)
                                .addComponent(btnAccetta))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(LabelLingua, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(LabelLingua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxLingua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CheckBoxTermini)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAccetta)
                        .addComponent(btnEsci)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // CheckBox
    private void CheckBoxTerminiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBoxTerminiActionPerformed
        // TODO add your handling code here:
        
        if(CheckBoxTermini.isSelected()){
            btnAccetta.setEnabled(true);
        }
        else{
            btnAccetta.setEnabled(false);
        }
    }//GEN-LAST:event_CheckBoxTerminiActionPerformed
    
    // Bottone Accetta
    private void btnAccettaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccettaActionPerformed
        // TODO add your handling code here:
        
        if(CheckBoxTermini.isSelected()){
            try {
                FileWriter termini= new FileWriter("src/TXTfiles/Principale/Termini.txt");
                termini.write("1");
                termini.close();
                
                Principale p= new Principale();
                p.setLocationRelativeTo(null);
                p.show();
                dispose();
            }catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Impossibile aprire il fie \"Termini.txt\"","Errore",JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_btnAccettaActionPerformed
    
    // ComboBox
    private void ComboBoxLinguaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxLinguaActionPerformed
        // TODO add your handling code here:
        
        int index=ComboBoxLingua.getSelectedIndex(); // Lingua selezionata
        String path="";

        String temp="";
        
        // Termini e condizioni 
        if(index==0){
            // Stringhe in lingua italiana
            path="src/TXTfiles/Boot/italianoTermini.txt";
        }
        else if(index==1){
            // Stringhe in lingua inglese
            path="src/TXTfiles/Boot/ingleseTermini.txt";
        }
        
        
        try {
            FileWriter lingua= new FileWriter("src/TXTfiles/lingua.txt");
            lingua.write(String.valueOf(index));
            lingua.close();
        } catch (IOException ex) {
            Logger.getLogger(Termini.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        try(BufferedReader reader= new BufferedReader(new FileReader(path))){
            String line;
            
            while((line=reader.readLine())!=null){
                temp=temp+line+"\n";
            }
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, "Errore durante la lettura del file:\n" + e.getMessage());
            return;
        }
        
        
        TextAreaTermini.setText(temp);
        TextAreaTermini.setCaretPosition(0);
        
        if(index==0){
            // Stringhe in lingua italiana
            path="src/TXTfiles/Boot/italianoTasti.txt";
        }
        else if(index==1){
            // Stringhe in lingua inglese
            path="src/TXTfiles/Boot/ingleseTasti.txt";
        }
        
        try(BufferedReader reader= new BufferedReader(new FileReader(path))){
            
            String line;
            
            for(int i=0;i<4;i++){
                if((line=reader.readLine())!=null){
                    switch(i){
                        case 0:
                            CheckBoxTermini.setText(line);
                            break;
                        case 1:
                            btnEsci.setText(line);
                            break;
                        case 2:
                            btnAccetta.setText(line);
                            break;
                        case 3:
                            LabelLingua.setText(line);
                            break;
                    }
                }
            }
            
        }catch(IOException e){
            JOptionPane.showMessageDialog(null, "Errore durante la lettura del file:\n" + e.getMessage());
            return;
        }
    }//GEN-LAST:event_ComboBoxLinguaActionPerformed
    
    // Tasto Esci
    private void btnEsciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEsciActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnEsciActionPerformed

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Termini.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Termini.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Termini.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Termini.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        FlatDarkLaf.setup();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Termini().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBoxTermini;
    private javax.swing.JComboBox<String> ComboBoxLingua;
    private javax.swing.JLabel LabelLingua;
    private javax.swing.JTextArea TextAreaTermini;
    private javax.swing.JButton btnAccetta;
    private javax.swing.JButton btnEsci;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
